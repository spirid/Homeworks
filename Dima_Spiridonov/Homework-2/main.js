 // Задание 1:
 //    Написать регулярное выражение, которое будет тестировать на соответствие строки вида - name_surname-1234@gmail.com :
 //      - имя и фамилия должны состоять только из англ. букв и быть длиной от 3 до 10 символов, между ними _ обязательно
 //      - далее опциональная часть, начинающаяся с тире и состоящая из 4-х цифр
 //      - затем обязательный знак @
 //      - название почтового сервиса должно быть длиной от 2-х до 20-ти символов, может состоять из букв английского
 //        алфавита и цифр, а также дополнительно опционально может содержать внутри себя одно тире или одну точку
 //      - обязательная часть .com
 //    Хорошо протестировать регулярное выражение.



/^[a-z]{3,10}_[a-z]{3,10}(\-[\d]{4})?@[a-z\d]{1,10}(\-|.)?[a-z\d]{2,20}.com$/i.test('name_surname-1234@gmail.com');


 // Задание 2:
 //    Написать функцию, которая с помощью регулярного выражения будет тестировать на соответствие строки вида:
 //      +375-25-777-77-77
 //      375299999999
 //      8-044-444-44-44
 //      8033-6666666
 //    и возвращать boolean.

 //    Условия:
 //      - + перед 375 - опциональный
 //      - номер может начинаться с 375 (без 0) либо с 80
 //      - номер должен содержать один из кодов - 25, 29, 33, 44 либо 17
 //      - основная часть номера не может начинаться с 0
 //      - некоторые или все тире могут быть пропущены, но расположение тех, которые пропущены не будут, может быть только
 //        таким, как в примерах 1 и 3

 //    Перед отправкой постараться максимально соптимизировать своё решение и убрать все лишнее.


function isPhone(phone){
	return /^(\+?375|8\-?0)\-?(29|25|44|33|17)\-?([1-9]{1}[0-9]{2})\-?(\d{2})\-?(\d{2})$/.test(phone)
}

console.log(isPhone('+375-25-777-77-77'));
console.log(isPhone('375299999999'));
console.log(isPhone('8-044-444-44-44'));
console.log(isPhone('8033-6666666'));

 // Задание 3:
 //    Переписать решение задачи с поиском гласных с использованием регулярного выражения. Протестировать ситуацию, когда
 //    гласных в переданном тексте будет 0. По возможности придумать несколько вариантов решения.


function vowelsCounts(text){
 // 2 вариант console.log(text.split(/[eyuioa]/i).length-1);
    var i=0;
    while(text){
  text.match(/[eyuioa]/i) ? text = text.slice(text.match(/[eyuioa]/i)['index']+1, text.length) : text= false;
       i++;
    }
   console.log(i-1);
}

vowelsCounts('taerawdasdsadadaddddddredfqwedascasdqwedwdasfasfd');